group 'org.metanalysis'
version '0.1.0'

buildscript {
    ext {
        kotlin_version = '1.1.3-2'
        dokka_version = '0.9.15'
        junit_version = '4.12'
        metanalysis_version = '0.1.6'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'jacoco'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "com.github.andreihh.metanalysis:metanalysis-core:$metanalysis_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "junit:junit:$junit_version"
}

mainClassName = 'org.metanalysis.ocb.Main'

distributions {
    main {
        contents {
            from(dokka) {
                into 'docs'
            }
        }
    }
}

dokka {
    moduleName = project.name
    includes = ['Module.md']
    impliedPlatforms = ['JVM']
    jdkVersion = 7
    outputFormat = 'javadoc'

    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/andreihh/${project.name}/blob/master/${project.name}/$dir"
        suffix = "#L"
    }
}

jar {
    from rootProject.file('LICENSE')
    from rootProject.file('NOTICE')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from dokka.outputDirectory
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

jacocoTestReport {
    dependsOn test

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

task codeCoverageReport(dependsOn: jacocoTestReport)
